name: Terraform Plan

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to plan (dev, preprod, prod)'
        required: true
        type: choice
        options:
          - dev
          - preprod
          - prod

jobs:
  terraform-plan:
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      # Set environment: PR detection or manual input
      - name: Set environment
        id: set_env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
            echo "Environment set from manual input: ${{ github.event.inputs.environment }}"
          else
            ENV=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
              | grep '^terraform/envs/' \
              | grep '.tfvars' \
              | head -n1 \
              | sed 's|terraform/envs/||;s|.tfvars||')
            if [ -z "$ENV" ]; then
              echo "No environment detected from PR, defaulting to dev"
              ENV=dev
            fi
            echo "ENV=$ENV" >> $GITHUB_ENV
            echo "Environment detected from PR: $ENV"
          fi

      # Configure AWS credentials
      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets[format('ROLE_ARN_%s', env.ENV)] }}
          aws-region: us-east-1

      # Select backend
      - name: Select backend for environment
        run: cp terraform/envs/backend_${{ env.ENV }}.tf terraform/backend.tf

      # Terraform Init
      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      # Terraform Plan
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file="envs/${ENV}.tfvars" -input=false -no-color -out=tfplan

      # Notify success/failure
      - name: Notify on Success
        if: success()
        run: echo "Terraform Plan completed successfully for ${{ env.ENV }}"

      - name: Notify on Failure
        if: failure()
        run: echo "Terraform Plan failed for ${{ env.ENV }}"
